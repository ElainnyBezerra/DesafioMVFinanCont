/* CRIAÇÃO DE TABELA */
******************************
/* ENDEREÇO */
CREATE TABLE ENDERECO
(
 ID_ENDERECO NUMBER NOT NULL,
 RUA VARCHAR2(200) NOT NULL,
 NUMERO NUMBER NOT NULL,
 COMPLEMENTO VARCHAR2(100),
 BAIRRO VARCHAR2(200) NOT NULL,
 CIDADE VARCHAR2(200) NOT NULL,
 UF VARCHAR2(2) NOT NULL,
 CEP VARCHAR2(10) NOT NULL,
 CONSTRAINT ENDERECO_PK PRIMARY KEY 
    (
        ID_ENDERECO
    ) 
    ENABLE
);
******************************
/* CONTA */
CREATE TABLE CONTA
(
 ID_CONTA NUMBER NOT NULL,
 NUMERO VARCHAR2(20) NOT NULL,
 STATUS_CONTA VARCHAR2(1),
 ID_CLIENTE NUMBER,
 CONSTRAINT FK_ID_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE (ID_CLIENTE),
 CONSTRAINT CONTA_PK PRIMARY KEY
    (
        ID_CONTA
    )
    ENABLE
);
******************************
/* CLIENTE */
CREATE TABLE CLIENTE
(
 ID_CLIENTE NUMBER NOT NULL,
 NOME VARCHAR2(200) NOT NULL,
 CPF_CNPJ VARCHAR2(14) NOT NULL,
 RG VARCHAR2(9) NOT NULL,
 IE VARCHAR2(9) NOT NULL,
 TELEFONE VARCHAR(15),
 SALDO_INICIAL NUMBER NOT NULL,
 SALDO_ATUAL NUMBER,
 DT_CADASTRO VARCHAR(10) NOT NULL,
 ID_ENDERECO NUMBER,
 CONTRAINT UC_CLIENTE UNIQUE (CPF_CNPJ,RG,IE),
 CONSTRAINT FK_ID_ENDERECO FOREIGN KEY (ID_ENDERECO) REFERENCES ENDERECO (ID_ENDERECO),
 CONSTRAINT CLIENTE_PK PRIMARY KEY 
    (
        ID_CLIENTE
    )
    ENABLE
 
);
******************************
/* MOVIMENTAÇÕES */
CREATE TABLE MOVIMENTACOES
( 
    ID_MOVIM NUMBER NOT NULL,
    DATA_MOVIM VARCHAR2 NOT NULL,
    TP_MOVIM NUMBER,
    ID_CLIENTE NUMBER,
    ID_CONTA NUMBER,
    CONSTRAINT FK_ID_CLIENTES FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE (ID_CLIENTE),
    CONSTRAINT MOVIMENTACOES_PK PRIMARY KEY
        (
            ID_MOVIM
        )
        ENABLE
******************************
/* CRIAÇÃO DE SEQUENCE */
******************************
/* ENDEREÇO */
CREATE SEQUENCE S_ID_ENDERECO INCREMENT BY 1 START WITH 1 MINVALUE 1;

SELECT S_ID_ENDERECO.NEXTVAL FROM DUAL;

CREATE OR REPLACE TRIGGER T_ID_ENDERECO
BEFORE INSERT ON ENDERECO
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            IF :NEW.ID_ENDERECO IS NULL THEN
                SELECT S_ID_ENDERECO.NEXTVAL INTO :NEW.ID_ENDERECO FROM DUAL;
            END IF;
        END IF;
    END;
******************************
/* CONTA */  
CREATE SEQUENCE S_ID_CONTA INCREMENT BY 1 START WITH 1 MINVALUE 1;

SELECT S_ID_CONTA.NEXTVAL FROM DUAL;

CREATE OR REPLACE TRIGGER T_ID_CONTA
BEFORE INSERT ON CONTA
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            IF :NEW.ID_CONTA IS NULL THEN
                SELECT S_ID_CONTA.NEXTVAL INTO :NEW.ID_CONTA FROM DUAL;
            END IF;
        END IF;
    END;
******************************
/* CLIENTE */
CREATE SEQUENCE S_ID_CLIENTE INCREMENT BY 1 START WITH 1 MINVALUE 1;

SELECT S_ID_CLIENTE.NEXTVAL FROM DUAL;

CREATE OR REPLACE TRIGGER T_ID_CLIENTE
BEFORE INSERT ON CLIENTE
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            IF :NEW.ID_CLIENTE IS NULL THEN
                SELECT S_ID_CLIENTE.NEXTVAL INTO :NEW.ID_CLIENTE FROM DUAL;
            END IF;
        END IF;
    END;
******************************
/* MOVIMENTAÇÕES */
CREATE SEQUENCE S_ID_MOVIM INCREMENT BY 1 START WITH 1 MINVALUE 1;

SELECT S_ID_MOVIM.NEXTVAL FROM DUAL;

CREATE OR REPLACE TRIGGER T_ID_MOVIM
BEFORE INSERT ON MOVIMENTACOES
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            IF :NEW.ID_MOVIM IS NULL THEN
                SELECT S_ID_MOVIM.NEXTVAL INTO :NEW.ID_MOVIM FROM DUAL;
            END IF;
        END IF;
    END;
******************************
/* ALTERAÇÕES */

ALTER TABLE MOVIMENTACOES ADD ID_CONTA NUMBER;

ALTER TABLE MOVIMENTACOES ADD CONSTRAINT FK_ID_CONTA FOREIGN KEY (ID_CONTA) REFERENCES CONTA (ID_CONTA);
******************************
/* CRIAÇÃO DE PROCEDURE */
******************************
/* BUSCA CLIENTE POR CPF */

CREATE OR REPLACE PROCEDURE BUSCA_CLIENTE_CPF ( 
   CPF IN VARCHAR2,
   RG IN VARCHAR2,
   ID_CLIENTE OUT NUMBER ) 
AS 
BEGIN 
    SELECT ID_CLIENTE INTO ID_CLIENTE 
    FROM CLIENTE 
    WHERE CPF_CNPJ = CPF AND RG = RG;
END;
******************************
/* BUSCA CLIENTE POR CNPJ */

CREATE OR REPLACE PROCEDURE BUSCA_CLIENTE_CNPJ ( 
   CNPJ IN VARCHAR2,
   IE IN VARCHAR2,
   ID_CLIENTE OUT NUMBER ) 
AS 
BEGIN 
    SELECT ID_CLIENTE INTO ID_CLIENTE 
    FROM CLIENTE 
    WHERE CPF_CNPJ = CNPJ AND IE = IE;
END;
******************************
/* BUSCA CONTA */

PROCEDURE BUSCA_CONTA ( 
   NUMCONTA IN VARCHAR2,
   ID_CLIENTE IN NUMBER,
   ID_CONTA OUT NUMBER ) 
AS 
BEGIN 
    SELECT ID_CONTA INTO ID_CONTA 
    FROM CONTA 
    WHERE (NUMERO = NUMCONTA AND ID_CLIENTE = ID_CLIENTE);
END;
******************************
/* BUSCA MOVIMENTAÇÕES */

CREATE OR REPLACE PROCEDURE BUSCA_MOV(
   ID_CLIENTE IN NUMBER,
   ID_CONTA IN NUMBER,
   ID_MOV OUT NUMBER ) 
AS 
BEGIN 
    SELECT ID_MOVIM INTO ID_MOV 
    FROM MOVIMENTACOES 
    WHERE ID_CLIENTE = ID_CLIENTE AND ID_CONTA = ID_CONTA;
END;